aux[1:3,]
a[57:60,]
aux[1:3,]
a[57:60,]
aux[1:3,]
a[57:60,]
aux[1:4,]
a[57:60,]
aux[1:4,]
tail(a)
# corrigindo erro nas ultimas linhas (será que acontece em todos os casos?)
aux <- a[57:nrow(a),1:6]
aux
aux <- cbind(rep("", nrow(aux)), aux)
aux
names(aux) <- names(a)
a[57:60,]
aux
a[57:60,]
aux
library(plyr)
teste <- join_all(list(a, aux))
tail(teste)
teste[50:70,]
teste[50:nrow(teste),]
teste[50:nrow(teste),]
a2 <- a[57:nrow(a),]
nrow(a2)
# corrigindo erro nas ultimas linhas (será que acontece em todos os casos?)
aux <- a[57:nrow(a),1:6]
aux <- cbind(rep("", nrow(aux)), aux)
names(aux) <- names(a)
a2 <- a[-(57:nrow(a)),]
nrow(a2)
a2[(nrow(a2)+1),]
a2[(nrow(a2)+1),] <- aux[1,]
names(a)
names(aux)
names(a2)
names(a2)==names(aux)
str(a)
str(aux)
teste <- join_all(list(a, aux))
teste
a
aux
library(dplyr)
a %>% full_join(aux)
a
as.vector(a)
b<-as.vector(a)
b
str(b)
names(aux) <- names(a)
a
class(a)
a$regional <- as.vector(a$regional)
a$municipio <- as.vector(a$municipio)
a$confirmados <- as.vector(a$confirmados)
a$obitos <- as.vector(a$obitos)
a$descartados <- as.vector(a$descartados)
a$investigacao <- as.vector(a$investigacao)
a$total <- as.vector(a$total)
str(a)
a[57:nrow(a),]
a[57:nrow(a),] <- aux
tail(a)
a[50:nrow(a),]
a[50:nrow(a),]
# pacote para extração dos pdfs
library(tabulizer)
# link do pdf
url = 'http://www.saude.pr.gov.br/arquivos/File/CORONA_10042020.pdf'
# extração de um pdf
out = extract_tables(url)
# o output é uma lista
str(out)
# trabalhando com um elemento da lista
a <- as.data.frame(out[1])
a$regional <- as.vector(a$regional)
a$municipio <- as.vector(a$municipio)
a$confirmados <- as.vector(a$confirmados)
a$obitos <- as.vector(a$obitos)
a$descartados <- as.vector(a$descartados)
a$investigacao <- as.vector(a$investigacao)
a$total <- as.vector(a$total)
str(a)
# pacote para extração dos pdfs
library(tabulizer)
# link do pdf
url = 'http://www.saude.pr.gov.br/arquivos/File/CORONA_10042020.pdf'
# extração de um pdf
out = extract_tables(url)
# o output é uma lista
str(out)
# trabalhando com um elemento da lista
a <- as.data.frame(out[1])
# renomeando colunas
nomes <- c("regional", "municipio", "confirmados", "obitos",
"descartados", "investigacao", "total")
names(a) <- nomes
# corrigindo formato das colunas
a$regional <- as.vector(a$regional)
a$municipio <- as.vector(a$municipio)
a$confirmados <- as.vector(a$confirmados)
a$obitos <- as.vector(a$obitos)
a$descartados <- as.vector(a$descartados)
a$investigacao <- as.vector(a$investigacao)
a$total <- as.vector(a$total)
str(a)
# corrigindo erro nas ultimas linhas (será que acontece em todos os casos?)
aux <- a[57:nrow(a),1:6]
aux <- cbind(rep("", nrow(aux)), aux)
names(aux) <- names(a)
a[57:nrow(a),]
aux
a[57:nrow(a),] <- aux
a[50:nrow(a),]
a[50:nrow(a),]
aux <- cbind(rep(NA, nrow(aux)), aux)
names(aux) <- names(a)
a[57:nrow(a),] <- aux
a[50:nrow(a),]
a[57:nrow(a),] <- aux
aux <- cbind(rep("", nrow(aux)), aux)
names(aux) <- names(a)
a[57:nrow(a),] <- aux
a[50:nrow(a),]
# Install the Java Runtime Environment (JRE).
# > sudo apt-get install -y default-jre
# Install the Java Development Kit (JDK).
# > sudo apt-get install -y default-jdk
# Update where R expects to find various Java files.
# > sudo R CMD javareconf
# Install the package.
# > install.packages("rJava")
#install.packages("tabulizer", dependencies = TRUE)
# pacote para extração dos pdfs
library(tabulizer)
# link do pdf
url = 'http://www.saude.pr.gov.br/arquivos/File/CORONA_10042020.pdf'
# extração de um pdf
out = extract_tables(url)
# o output é uma lista
str(out)
# trabalhando com um elemento da lista
a <- as.data.frame(out[1])
# renomeando colunas
nomes <- c("regional", "municipio", "confirmados", "obitos",
"descartados", "investigacao", "total")
names(a) <- nomes
# corrigindo formato das colunas
a$regional <- as.vector(a$regional)
a$municipio <- as.vector(a$municipio)
a$confirmados <- as.vector(a$confirmados)
a$obitos <- as.vector(a$obitos)
a$descartados <- as.vector(a$descartados)
a$investigacao <- as.vector(a$investigacao)
a$total <- as.vector(a$total)
str(a)
# corrigindo erro nas ultimas linhas (será que acontece em todos os casos?)
aux <- a[57:nrow(a),1:6]
aux <- cbind(rep("", nrow(aux)), aux)
names(aux) <- names(a)
a[57:nrow(a),] <- aux
a[50:nrow(a),]
#library(dplyr)
# %>% full_join(aux)
a[50:nrow(a),]
# retirando a coluna de regional
a <- a[,2:]
# retirando a coluna de regional
a <- a[,2:ncol(a)]
a
names(a)
a$municipio
a$confirmados
a[-1,]
# excluindo a primeira linha
a <- a[2:nrow(a),]
# corrigindo formato das colunas
a$regional <- as.vector(a$regional)
a$municipio <- as.vector(a$municipio)
a$confirmados <- as.vector(a$confirmados)
a$obitos <- as.vector(a$obitos)
a$descartados <- as.vector(a$descartados)
a$investigacao <- as.vector(a$investigacao)
a$total <- as.vector(a$total)
str(a)
a[1,]
str(a)
# corrigindo erro nas ultimas linhas (será que acontece em todos os casos?)
aux <- a[57:nrow(a),1:6]
aux <- cbind(rep("", nrow(aux)), aux)
names(aux) <- names(a)
a[57:nrow(a),] <- aux
# retirando a coluna de regional
a <- a[,2:ncol(a)]
# Install the Java Runtime Environment (JRE).
# > sudo apt-get install -y default-jre
# Install the Java Development Kit (JDK).
# > sudo apt-get install -y default-jdk
# Update where R expects to find various Java files.
# > sudo R CMD javareconf
# Install the package.
# > install.packages("rJava")
#install.packages("tabulizer", dependencies = TRUE)
# pacote para extração dos pdfs
library(tabulizer)
# link do pdf
url = 'http://www.saude.pr.gov.br/arquivos/File/CORONA_10042020.pdf'
# extração de um pdf
out = extract_tables(url)
# o output é uma lista
str(out)
# trabalhando com um elemento da lista
a <- as.data.frame(out[1])
# renomeando colunas
nomes <- c("regional", "municipio", "confirmados", "obitos",
"descartados", "investigacao", "total")
names(a) <- nomes
# excluindo a primeira linha
a <- a[2:nrow(a),]
# corrigindo formato das colunas
a$regional <- as.vector(a$regional)
a$municipio <- as.vector(a$municipio)
a$confirmados <- as.vector(a$confirmados)
a$obitos <- as.vector(a$obitos)
a$descartados <- as.vector(a$descartados)
a$investigacao <- as.vector(a$investigacao)
a$total <- as.vector(a$total)
str(a)
# corrigindo erro nas ultimas linhas (será que acontece em todos os casos?)
aux <- a[57:nrow(a),1:6]
aux <- cbind(rep("", nrow(aux)), aux)
names(aux) <- names(a)
a[57:nrow(a),] <- aux
# retirando a coluna de regional
a <- a[,2:ncol(a)]
names(a)
a$confirmados
# retirando a coluna de regional
a <- a[,2:ncol(a)]
head(a)
# extração de um pdf
out = extract_tables(url)
# o output é uma lista
str(out)
# trabalhando com um elemento da lista
a <- as.data.frame(out[1])
# renomeando colunas
nomes <- c("regional", "municipio", "confirmados", "obitos",
"descartados", "investigacao", "total")
names(a) <- nomes
# excluindo a primeira linha
a <- a[2:nrow(a),]
# corrigindo formato das colunas
a$regional <- as.vector(a$regional)
a$municipio <- as.vector(a$municipio)
a$confirmados <- as.vector(a$confirmados)
a$obitos <- as.vector(a$obitos)
a$descartados <- as.vector(a$descartados)
a$investigacao <- as.vector(a$investigacao)
a$total <- as.vector(a$total)
str(a)
# corrigindo erro nas ultimas linhas (será que acontece em todos os casos?)
aux <- a[57:nrow(a),1:6]
aux <- cbind(rep("", nrow(aux)), aux)
names(aux) <- names(a)
a[57:nrow(a),] <- aux
a[57:nrow(a),]
# retirando a coluna de regional
a <- a[,2:ncol(a)]
names(a)
a$municipio
# Install the Java Runtime Environment (JRE).
# > sudo apt-get install -y default-jre
# Install the Java Development Kit (JDK).
# > sudo apt-get install -y default-jdk
# Update where R expects to find various Java files.
# > sudo R CMD javareconf
# Install the package.
# > install.packages("rJava")
#install.packages("tabulizer", dependencies = TRUE)
# pacote para extração dos pdfs
library(tabulizer)
# link do pdf
url = 'http://www.saude.pr.gov.br/arquivos/File/CORONA_10042020.pdf'
# extração de um pdf
out = extract_tables(url)
# o output é uma lista
str(out)
# trabalhando com um elemento da lista
a <- as.data.frame(out[1])
# renomeando colunas
nomes <- c("regional", "municipio", "confirmados", "obitos",
"descartados", "investigacao", "total")
names(a) <- nomes
# excluindo a primeira linha
a <- a[2:nrow(a),]
# corrigindo formato das colunas
a$regional <- as.vector(a$regional)
a$municipio <- as.vector(a$municipio)
a$confirmados <- as.vector(a$confirmados)
a$obitos <- as.vector(a$obitos)
a$descartados <- as.vector(a$descartados)
a$investigacao <- as.vector(a$investigacao)
a$total <- as.vector(a$total)
str(a)
# corrigindo erro nas ultimas linhas (será que acontece em todos os casos?)
aux <- a[56:nrow(a),1:6]
aux <- cbind(rep("", nrow(aux)), aux)
names(aux) <- names(a)
a[56:nrow(a),] <- aux
# retirando a coluna de regional
a <- a[,2:ncol(a)]
a$municipio
# pacote para extração dos pdfs
library(tabulizer)
# link do pdf
url = 'http://www.saude.pr.gov.br/arquivos/File/CORONA_10042020.pdf'
# extração de um pdf
out = extract_tables(url)
# o output é uma lista
str(out)
# trabalhando com um elemento da lista
a <- as.data.frame(out[1])
# renomeando colunas
nomes <- c("regional", "municipio", "confirmados", "obitos",
"descartados", "investigacao", "total")
names(a) <- nomes
# excluindo a primeira linha
a <- a[2:nrow(a),]
# corrigindo formato das colunas
a$regional <- as.vector(a$regional)
a$municipio <- as.vector(a$municipio)
a$confirmados <- as.numeric(a$confirmados)
a$obitos <- as.numeric(a$obitos)
a$descartados <- as.numeric(a$descartados)
a$investigacao <- as.numeric(a$investigacao)
a$total <- as.numeric(a$total)
str(a)
# corrigindo erro nas ultimas linhas (será que acontece em todos os casos?)
aux <- a[56:nrow(a),1:6]
aux <- cbind(rep("", nrow(aux)), aux)
names(aux) <- names(a)
a[56:nrow(a),] <- aux
# retirando a coluna de regional
a <- a[,2:ncol(a)]
a$municipio
tolower(a$municipio)
a$municipio <- as.vector(tolower(a$municipio))
plot(a$confirmados~a$obitos)
install.packages("brazilmaps")
install.packages("brazilmaps", dependencies = T)
install.packages("units")
install.packages("units", type='binary')
install.packages('brazilmaps')
install.packages('brazilmaps')
# sudo apt install -y libudunits2-0 libudunits2-dev
#install.packages('brazilmaps')
library(brazilmaps)
BR <- get_brmap("City")
BR
class(BR)
plot_brmap(BR)
library(sf)
plot_brmap(BR)
library(brazilmaps)
library(brazilmaps)
library(ggplot2)
library(sf)
library(tidyverse)
library(sp)
# sudo apt install -y libudunits2-0 libudunits2-dev
#install.packages('brazilmaps')
help(brazilmaps)
??brazilmaps
?get_brmap
PR <- get_brmap("City", geo.filter = list(State = 5) )
PR <- get_brmap("City", geo.filter = list(State = 31) )
PR
PR <- get_brmap("City", geo.filter = list(State = 41) )
plot_brmap(PR)
mapa1 <- plot_brmap(PR, data_to_join = a,
join_by = c("City" = "municipio"),
var = "obitos")
mapa1 <- plot_brmap(PR, data_to_join = a,
join_by = c("City" = "mun"),
var = "obitos")
mapa1 <- plot_brmap(PR, data_to_join = a,
join_by = c("City" = "municipio"),
var = "obitos")
PR$City
PR$nome
mapa1 <- plot_brmap(PR, data_to_join = a,
join_by = c("nome" = "municipio"),
var = "obitos")
mapa1
str(PR$nome)
PR$nome <- as.vector(tolower(PR$nome))
mapa1 <- plot_brmap(PR, data_to_join = a,
join_by = c("nome" = "municipio"),
var = "obitos")
mapa1
# trabalhando com um elemento da lista
B <- as.data.frame(out[2])
# trabalhando com um elemento da lista
b <- as.data.frame(out[2])
# renomeando colunas
nomes <- c("regional", "municipio", "confirmados", "obitos",
"descartados", "investigacao", "total")
names(b) <- nomes
# excluindo a primeira linha
b <- b[2:nrow(b),]
# corrigindo formato das colunas
b$regional <- as.vector(b$regional)
b$municipio <- as.vector(tolower(b$municipio))
b$confirmados <- as.numeric(b$confirmados)
b$obitos <- as.numeric(b$obitos)
b$descartados <- as.numeric(b$descartados)
b$investigacao <- as.numeric(b$investigacao)
################################################################
############# ANALISE DADOS CORONA VIRUS NO PARANA #############
################################################################
################################################################
# PDFS
# Install the Java Runtime Environment (JRE).
# > sudo apt-get install -y default-jre
# Install the Java Development Kit (JDK).
# > sudo apt-get install -y default-jdk
# Update where R expects to find various Java files.
# > sudo R CMD javareconf
# Install the package.
# > install.packages("rJava")
#install.packages("tabulizer", dependencies = TRUE)
# pacote para extração dos pdfs
library(tabulizer)
# link do pdf
url = 'http://www.saude.pr.gov.br/arquivos/File/CORONA_10042020.pdf'
# extração de um pdf
out = extract_tables(url)
# o output é uma lista
str(out)
################################################################
# PAGINA 1
# trabalhando com um elemento da lista
a <- as.data.frame(out[1])
# renomeando colunas
nomes <- c("regional", "municipio", "confirmados", "obitos",
"descartados", "investigacao", "total")
names(a) <- nomes
# excluindo a primeira linha
a <- a[2:nrow(a),]
# corrigindo formato das colunas
a$regional <- as.vector(a$regional)
a$municipio <- as.vector(tolower(a$municipio))
a$confirmados <- as.numeric(a$confirmados)
a$obitos <- as.numeric(a$obitos)
a$descartados <- as.numeric(a$descartados)
a$investigacao <- as.numeric(a$investigacao)
a$total <- as.numeric(a$total)
str(a)
# corrigindo erro nas ultimas linhas (será que acontece em todos os casos?)
aux <- a[56:nrow(a),1:6]
aux <- cbind(rep("", nrow(aux)), aux)
names(aux) <- names(a)
a[56:nrow(a),] <- aux
# retirando a coluna de regional
a <- a[,2:ncol(a)]
# trabalhando com um elemento da lista
b <- as.data.frame(out[2])
# PAGINA 2
tail(b)
nrow(b)
b[60:71,]
# trabalhando com um elemento da lista
b <- as.data.frame(out[2])
library(pdftools)
install.packages("pdftools")
animate()
library(gganimate)
animate()
?animate()
options(gganimate.dev_args = list(width = 100, height = 100))
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
library(tidyverse)    # programação eficiente
library(stringr)      # tratamento de strings
library(tabulizer)    # importação de tabelas em arquivos pdf
library(gifski)       # geração de gifs a partir de um conjunto de pngs
library(sp)           # classes e métodos para dados espaciais
library(maptools)     # ferramentas para lidar com objetos espaciais
library(RColorBrewer) # criação de paleta de cores para mapas temáticos
library(plotly)       # graficos dinamicos
library(gganimate)    # graficos animados
?animate
install.packages("stargazer")
library(stargazer)
attitude
stargazer(attitude)
?stargazer
stargazer(attitude, title = 'teste')
setwd("~/mepc2020")
library(rmarkdown)
render_site()
render_site()
render_site()
render_site()
render_site()
library(rmarkdown)
render_site()
render_site()
